services:
  localstack:
    container_name: aws-localstack
    image: localstack/localstack:latest
    ports:
      - "4566:4566"  # LocalStack edge port
      - "4510-4559:4510-4559"  # external services port range
    environment:
      - SERVICES=sqs,sns,ec2,rds,s3,events
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=eu-west-1
      - HOSTNAME_EXTERNAL=localstack
      - TMPDIR=/tmp/localstack
    volumes:
      - "./localstack-data:/var/lib/localstack"
      - "./localstack-tmp:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - dojo-network

  # PostgreSQL container to simulate RDS
  postgres:
    container_name: postgres-db
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=dojo
      - POSTGRES_PASSWORD=dojo123
      - POSTGRES_DB=dojodb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dojo-network

  # MongoDB container
  mongodb:
    container_name: mongo-db
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=dojo
    volumes:
      - mongodb-data:/data/db
    networks:
      - dojo-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis container
  redis:
    container_name: redis-cache
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - dojo-network
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres-data:
  mongodb-data:
  redis-data:

networks:
  dojo-network:
    driver: bridge
